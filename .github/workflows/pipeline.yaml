  name: Deploy With ArgoCD
  on:
    push:
      branches:
        - master
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v2

        - name: Login to Azure
          uses: azure/login@v1
          with:
            creds: ${{secrets.AZURE_CREDENTIALS}}

        - name: Login to ACR
          run: |
            az acr login -n ${{secrets.AZURE_CONTAINER_REGISTRY}}

        - name: Get AKS Credentials
          run: |
            az aks get-credentials -g ${{secrets.AZURE_RESOURCE_GROUP}} -n ${{secrets.AZURE_AKS_CLUSTER}} --overwrite-existing
            
        - name: Install ArgoCD
          run: |
            if ! kubectl get ns argocd > /dev/null 2>&1; then
              kubectl create namespace argocd
              kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
            else
              echo "ArgoCD is already installed."
            fi

        - name: Install ArgoCD CLI
          run: |
            if ! command -v argocd &> /dev/null; then
              curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
              chmod +x /usr/local/bin/argocd
            else
              echo "ArgoCD CLI is already installed."
            fi

        - name: Expose Argo CD API Server
          run: |
            kubectl patch svc argocd-server -n argocd -p '{"spec": {"type": "LoadBalancer"}}'
            
        - name: Get ArgoCD Server External IP
          id: get-ip
          run: |
            while : ; do
              IP=$(kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
              if [[ -z "$IP" ]]; then
                echo "Waiting for LoadBalancer IP..."
                sleep 10
              else
                echo "LoadBalancer IP is $IP"
                echo "ARGOCD_SERVER_IP=$IP" >> $GITHUB_ENV
                break
              fi
            done

        - name: Deploy ArgoCD Application
          run: |
            kubectl apply -f application.yaml
